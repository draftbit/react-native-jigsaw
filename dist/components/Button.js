"use strict";exports.__esModule=!0,exports.SEED_DATA=exports.default=void 0;var React=_interopRequireWildcard(require("react")),_reactNative=require("react-native"),_color=_interopRequireDefault(require("color")),_Config=_interopRequireDefault(require("./Config")),_Icon=_interopRequireDefault(require("./Icon")),_Touchable=_interopRequireDefault(require("./Touchable")),_Elevation=_interopRequireDefault(require("./Elevation")),_theming=require("../core/theming"),_componentTypes=require("../core/component-types");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)if(Object.prototype.hasOwnProperty.call(a,c)){var d=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(a,c):{};d.get||d.set?Object.defineProperty(b,c,d):b[c]=a[c]}return b.default=a,b}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(b,!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function _objectWithoutProperties(a,b){if(null==a)return{};var c,d,e=_objectWithoutPropertiesLoose(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(0<=b.indexOf(c))&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}/**
 * A button is component that the user can press to trigger an action.
 *
 * <div class="screenshots">
 *   <figure>
 *     <img src="screenshots/button-1.png" />
 *     <figcaption>Text button</figcaption>
 *   </figure>
 *   <figure>
 *     <img src="screenshots/button-2.png" />
 *     <figcaption>Outlined button</figcaption>
 *   </figure>
 *   <figure>
 *     <img src="screenshots/button-3.png" />
 *     <figcaption>Contained button</figcaption>
 *   </figure>
 * </div>
 *
 * ## Usage
 * ```js
 * import * as React from 'react';
 * import { Button } from '@draftbit/ui';
 *
 * const MyComponent = () => (
 *   <Button icon="add-a-photo" type="solid" onPress={() => console.log('Pressed')}>
 *     Press me
 *   </Button>
 * );
 *
 * export default MyComponent;
 * ```
 */class Button extends React.Component{render(){const a=this.props,{disabled:b,type:c,loading:d,icon:e,labelColor:f,color:g,children:h,onPress:i,elevation:j,style:k,theme:l}=a,m=_objectWithoutProperties(a,["disabled","type","loading","icon","labelColor","color","children","onPress","elevation","style","theme"]),{colors:n,disabledOpacity:o,borderRadius:p,spacing:q,typography:r}=l;let s,t,u,v;const w=g||n.primary;"solid"===c?(s=w,u=b?(0,_color.default)(n.surface).alpha(o).rgb().string():f||n.surface):(s="transparent",u=b?(0,_color.default)(w).alpha(o).rgb().string():f||w),"outline"===c?(t=b?(0,_color.default)(w).alpha(o).rgb().string():w,v=_reactNative.StyleSheet.hairlineWidth):(t="transparent",v=0);const x={backgroundColor:s,borderColor:t,borderWidth:v,borderRadius:p.button},y={textAlign:"center",color:u,marginVertical:q.large,marginHorizontal:q.large},z=[styles.icon,{marginLeft:q.large,marginRight:-8,width:_Config.default.buttonIconSize}];return React.createElement(_Elevation.default,{style:{elevation:j,alignSelf:"stretch"}},React.createElement(_Touchable.default,_extends({},m,{onPress:i,accessibilityTraits:b?["button","disabled"]:"button",accessibilityComponentType:"button",disabled:b||d,style:[styles.button,x,k]}),React.createElement(_reactNative.View,{style:styles.content},e&&!0!==d?React.createElement(_reactNative.View,{style:z},React.createElement(_Icon.default,{name:e,size:_Config.default.buttonIconSize,color:u})):null,d?React.createElement(_reactNative.ActivityIndicator,{size:"small",color:u,style:z}):null,React.createElement(_reactNative.Text,{numberOfLines:1,style:[styles.label,y,r.button]},h))))}}Button.defaultProps={elevation:0,type:"solid"};const styles=_reactNative.StyleSheet.create({button:{minWidth:64,borderStyle:"solid"},content:{flexDirection:"row",alignItems:"center",justifyContent:"center"},icon:{width:_Config.default.buttonIconSize}});var _default=(0,_theming.withTheme)(Button);exports.default=_default;const SEED_DATA_PROPS={icon:{label:"Icon Name",description:"Name of the icon",editable:!0,required:!0,type:_componentTypes.FORM_TYPES.icon,value:"MaterialIcons/add"},children:{label:"Label",description:"Button label",required:!0,editable:!0,type:_componentTypes.FORM_TYPES.string,value:"Get Started"},color:{label:"Color Override",description:"Override the background color of the button",editable:!0,required:!1,type:_componentTypes.FORM_TYPES.color,value:null},labelColor:{label:"Label Color Override",description:"Override the label color of the button",editable:!0,required:!1,type:_componentTypes.FORM_TYPES.color,value:null},disabled:{label:"Disabled",description:"Whether the button should be disabled",editable:!0,required:!1,type:_componentTypes.FORM_TYPES.boolean,value:null},loading:{label:"Loading",description:"Whether to show a loading indicator",editable:!0,required:!1,type:_componentTypes.FORM_TYPES.boolean,value:null},onPress:{label:"Action",description:"Action to execute when button pressed",editable:!0,type:_componentTypes.FORM_TYPES.action,value:null}},SEED_DATA=[{name:"Button Outline",tag:"Button",category:_componentTypes.COMPONENT_TYPES.button,preview_image_url:"{CLOUDINARY_URL}/Button_Outline.png",props:_objectSpread({},SEED_DATA_PROPS,{type:{label:"Type",description:"Button type",editable:!1,required:!0,type:_componentTypes.FORM_TYPES.string,value:"outline"}}),layout:{}},{name:"Button Solid",tag:"Button",category:_componentTypes.COMPONENT_TYPES.button,preview_image_url:"{CLOUDINARY_URL}/Button_Solid.png",props:_objectSpread({},SEED_DATA_PROPS,{type:{label:"Type",description:"Button type",editable:!1,required:!0,type:_componentTypes.FORM_TYPES.string,value:"solid"}}),layout:{}}];exports.SEED_DATA=SEED_DATA;