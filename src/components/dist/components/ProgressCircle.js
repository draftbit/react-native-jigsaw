"use strict";exports.__esModule=!0,exports.SEED_DATA=exports.default=void 0;var React=_interopRequireWildcard(require("react")),_reactNative=require("react-native"),Progress=_interopRequireWildcard(require("react-native-progress")),_componentTypes=require("../core/component-types"),_theming=require("../core/theming");function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)if(Object.prototype.hasOwnProperty.call(a,c)){var d=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(a,c):{};d.get||d.set?Object.defineProperty(b,c,d):b[c]=a[c]}return b.default=a,b}const ProgressCircle=(a)=>{let{progress:b,style:c,color:d,size:e,showsText:f,direction:g,unfilledColor:h,borderColor:i,borderWidth:j,strokeCap:k,fill:l,textStyle:m,thickness:n}=a;return React.createElement(Progress.Circle,{progress:b,color:d,unfilledColor:h,borderColor:i,borderWidth:j,showsText:f,direction:g,strokeCap:k,size:e,style:c,fill:l,textStyle:m,thickness:n})};var _default=(0,_theming.withTheme)(ProgressCircle);exports.default=_default;const SEED_DATA=[{name:"Progress Circle",tag:"ProgressCircle",description:"A circle used to show completed progress",category:_componentTypes.COMPONENT_TYPES.formControl,preview_image_url:"{CLOUDINARY_URL}/Status_Progress.png",supports_list_render:!1/* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */,props:{progress:{label:"Progress",description:"The amount of progress to display. A number 0-1.",type:_componentTypes.FORM_TYPES.number,value:.5,min:0,max:1,step:.01,precision:2,editable:!0,required:!0},color:{label:"Color",description:"Color for the progress shown",editable:!0,value:"primary",required:!0,type:_componentTypes.FORM_TYPES.color},unfilledColor:{label:"Unfilled Color",description:"The color of the unfilled portion of the progress bar(eg. if at 50% then this is the color of the other 50%)",editable:!0,value:null,required:!0,type:_componentTypes.FORM_TYPES.color},fill:{label:"Inner circle fill",description:"Color of the inner circle",editable:!0,value:null,required:!1,type:_componentTypes.FORM_TYPES.color},size:{label:"Size",description:"The size of the circle",type:_componentTypes.FORM_TYPES.number,value:100,min:0,max:300,step:1,precision:1,editable:!0,required:!0},showsText:{label:"Show Progress Text",description:"Shows progress in the middle of the circle",type:_componentTypes.FORM_TYPES.boolean,value:!0,editable:!0,required:!0},textStyle:{label:"Text Style",description:"Text Style of the inner circle",editable:!0,required:!0,type:_componentTypes.FORM_TYPES.typeStyle,value:null},thickness:{label:"Thickness",description:"Thickness of the inner circle",type:_componentTypes.FORM_TYPES.number,value:1,min:0,max:15,step:1,precision:1,editable:!0,required:!0},direction:{label:"Direction",description:"Direction that the circle renders in",type:_componentTypes.FORM_TYPES.flatArray,value:"clockwise",options:["counter-clockwise","clockwise"],editable:!0,required:!0},strokeCap:{label:"Stroke Cap",description:"The style of the stroke",type:_componentTypes.FORM_TYPES.flatArray,value:"butt",options:["butt","square","round"],editable:!0,required:!0}},layout:{width:250,height:250}}];exports.SEED_DATA=SEED_DATA;