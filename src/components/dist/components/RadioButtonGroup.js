"use strict";exports.__esModule=!0,exports.SEED_DATA=exports.default=void 0;var React=_interopRequireWildcard(require("react")),_theming=require("../core/theming"),_reactNative=require("react-native"),_Icon=_interopRequireDefault(require("./Icon.js")),_componentTypes=require("../core/component-types"),_Touchable=_interopRequireDefault(require("./Touchable"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)if(Object.prototype.hasOwnProperty.call(a,c)){var d=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(a,c):{};d.get||d.set?Object.defineProperty(b,c,d):b[c]=a[c]}return b.default=a,b}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(b,!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class RadioButtonGroup extends React.Component{constructor(){super(...arguments),this.state={selected:this.props.defaultSelection},this.onPress=a=>{const{controlled:b,onChange:c}=this.props;if(c&&c(a),!b)return this.setState({selected:a})},this.getSelected=()=>this.props.controlled?this.props.value:this.state.selected}render(){const{style:a,direction:b,options:c,activeColor:d,inactiveColor:e,labelStyle:f,labelWrapperStyle:g,iconSize:h,contentColor:i,borderRadius:j,optionSpacing:k,borderColor:l,controlled:m,unselectedContentColor:n,theme:{colors:o,spacing:p,typography:q}}=this.props,r="horizontal"===b&&k?k/2:0,s="vertical"===b&&k?k/2:0,t="vertical"===b?"100%":"auto";return React.createElement(_reactNative.View,{style:[a,{flexDirection:"vertical"===b?"column":"row",alignItems:"center",borderRadius:k?0:j,overflow:"hidden"}]},c.map((a,b)=>{const m=a.label==this.getSelected();return React.createElement(_Touchable.default,{key:a.key||b,style:{width:t},onPress:()=>this.onPress(a.label)},React.createElement(_reactNative.View,{style:_objectSpread({flexDirection:"row",alignItems:"center",justifyContent:"center",backgroundColor:m?d:e,borderLeftWidth:l&&0!==b?_reactNative.StyleSheet.hairlineWidth:0,borderRightWidth:l&&b!==c.length-1?_reactNative.StyleSheet.hairlineWidth:0,borderColor:l,borderRadius:k?j:0,marginLeft:r,marginRight:r,marginTop:s,marginBottom:s,padding:p.large},g)},a.icon?React.createElement(_Icon.default,{name:a.icon,size:h,color:i}):null,a.label?React.createElement(_reactNative.Text,{style:[q.button,f,{color:m?i:n}]},a.label):null))}))}}var _default=(0,_theming.withTheme)(RadioButtonGroup);exports.default=_default;const SEED_DATA={name:"Radio Button Group",tag:"RadioButtonGroup",category:_componentTypes.COMPONENT_TYPES.input,preview_image_url:"{CLOUDINARY_URL}/Control_Radio.png",props:{options:{label:"Options",description:"Options for the button group.",type:_componentTypes.FORM_TYPES.arrayInput,value:[],editable:!0,required:!0},direction:{label:"Horizontal/Vertical",description:"Whether the buttons should be Horizontal or Vertical",type:_componentTypes.FORM_TYPES.flatArray,value:"horizontal",options:["horizontal","vertical"],editable:!0,required:!0},activeColor:{label:"Active Color",description:"Color of the button when it's selected",value:null,type:_componentTypes.FORM_TYPES.color,editable:!0,required:!0},inactiveColor:{label:"Inactive Color",description:"Color of the button when it's selected not selected",value:null,type:_componentTypes.FORM_TYPES.color,editable:!0,required:!0},contentColor:{label:"Selected Content Color",description:"Color of the content(Icon and Label)",value:null,type:_componentTypes.FORM_TYPES.color,editable:!0,required:!0},unselectedContentColor:{label:"Unselected Content Color",description:"Unfinished Color of the content(Icon and Label)",value:null,type:_componentTypes.FORM_TYPES.color,editable:!0,required:!0},borderColor:{label:"Border Color",description:"Border color of the option",value:null,type:_componentTypes.FORM_TYPES.color,editable:!0,required:!0},labelStyle:{label:"Label Style",description:"Font and weight of the Label",type:_componentTypes.FORM_TYPES.typeStyle,value:"Button",editable:!0,required:!0},optionSpacing:{label:"Option Spacing",description:"The spacing between each option",type:_componentTypes.FORM_TYPES.number,value:1,min:0,max:20,step:1,precision:1,editable:!0,required:!1/* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */},borderRadius:{label:"Border Radius",description:"The border radius for the container or options",type:_componentTypes.FORM_TYPES.number,value:0,min:0,max:100,step:1,precision:1,editable:!0,required:!1},iconSize:{label:"Icon Size",description:"The size of the icon if enabled",type:_componentTypes.FORM_TYPES.number,value:0,min:0,max:50,step:1,precision:1,editable:!0,required:!1},fieldName:_componentTypes.FIELD_NAME},layout:{}};exports.SEED_DATA=SEED_DATA;