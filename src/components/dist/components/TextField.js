"use strict";exports.__esModule=!0,exports.SEED_DATA=exports.default=void 0;var React=_interopRequireWildcard(require("react")),_reactNative=require("react-native"),_reactLifecyclesCompat=require("react-lifecycles-compat"),_theming=require("../core/theming"),_componentTypes=require("../core/component-types"),_Icon=_interopRequireDefault(require("./Icon"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _interopRequireWildcard(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)if(Object.prototype.hasOwnProperty.call(a,c)){var d=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(a,c):{};d.get||d.set?Object.defineProperty(b,c,d):b[c]=a[c]}return b.default=a,b}function _extends(){return _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a},_extends.apply(this,arguments)}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(b,!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _objectWithoutProperties(a,b){if(null==a)return{};var c,d,e=_objectWithoutPropertiesLoose(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(0<=b.indexOf(c))&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}function _objectWithoutPropertiesLoose(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],0<=b.indexOf(c)||(e[c]=a[c]);return e}const AnimatedText=_reactNative.Animated.createAnimatedComponent(_reactNative.Text),FOCUS_ANIMATION_DURATION=150,BLUR_ANIMATION_DURATION=180,ICON_SIZE=24;class TextField extends React.Component{constructor(){var a;super(...arguments),a=this,this.state={labeled:new _reactNative.Animated.Value(this.props.value||this.props.error?0:1),focused:!1/* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */,placeholder:this.props.error?this.props.placeholder:"",value:this.props.value,labelLayout:{measured:!1,width:0}},this._showPlaceholder=()=>{// Set the placeholder in a delay to offset the label animation
// If we show it immediately, they'll overlap and look ugly
clearTimeout(this._timer),this._timer=setTimeout(()=>this.setState({placeholder:this.props.placeholder}),50)},this._hidePlaceholder=()=>this.setState({placeholder:""}),this._restoreLabel=()=>_reactNative.Animated.timing(this.state.labeled,{toValue:1,duration:FOCUS_ANIMATION_DURATION,useNativeDriver:!0}).start(),this._minmizeLabel=()=>_reactNative.Animated.timing(this.state.labeled,{toValue:0,duration:BLUR_ANIMATION_DURATION,useNativeDriver:!0}).start(),this._handleFocus=function(){a.props.disabled||a.setState({focused:!0})},this._handleBlur=function(){a.props.disabled||a.setState({focused:!1})},this._handleChangeText=a=>{this.props.disabled||(this.setState({value:a}),this.props.onChange&&this.props.onChange(a))}}static getDerivedStateFromProps(a,b){return{value:"undefined"==typeof a.value?b.value:a.value}}componentDidUpdate(a,b){(b.focused!==this.state.focused||b.value!==this.state.value)&&(this.state.value||this.state.focused||this.props.error?this._minmizeLabel():this._restoreLabel()),(b.focused!==this.state.focused||a.label!==this.props.label)&&(this.state.focused||this.props.error||!this.props.label?this._showPlaceholder():this._hidePlaceholder())}componentWillUnmount(){clearTimeout(this._timer)}toggleFocus(){this.setState(a=>({focused:!a.focused}))}/**
   * @internal
   */setNativeProps(){return this._root&&this._root.setNativeProps(...arguments)}isFocused(){return this._root&&this._root.isFocused()}clear(){return this._root&&this._root.clear()}focus(){return this._root&&this._root.focus()}blur(){return this._root&&this._root.blur()}render(){const a=this.props,{type:b,disabled:c,label:d,error:e,leftIconName:f,leftIconMode:g,rightIconName:h,assistiveText:i,multiline:j,style:k,theme:l,render:m}=a,n=_objectWithoutProperties(a,["type","disabled","label","error","leftIconName","leftIconMode","rightIconName","assistiveText","multiline","style","theme","render"]),{colors:o,typography:p,spacing:q,borderRadius:r,disabledOpacity:s}=l,t=-(p.caption.lineHeight+q.text),u=-(.5*q.large+q.text),v=p.subtitle1.fontSize,w=p.caption.fontSize,x=this.state.focused||e;let y,z,A,B,C,D,E,F;y=o.strong,c?(z=o.light,C=o.light,B="transparent",A="transparent",E=o.divider):(z=e?o.error:o.primary,C=B=o.light,A=o.light,E=o.background);const G=p.subtitle1,{lineHeight:H}=G,I=_objectWithoutProperties(G,["lineHeight"]);F=_objectSpread({paddingVertical:0,color:y,paddingLeft:f&&"inset"===g?ICON_SIZE+q.medium+("solid"===b?q.large:0):0,paddingRight:h?ICON_SIZE+q.large+q.text:q.medium},I),j||(F.height=H);let J;"underline"===b?(D={borderTopLeftRadius:r.global,borderTopRightRadius:r.global,paddingBottom:q.medium,marginTop:q.large},J=f&&"outset"===g?ICON_SIZE+q.small:0):(D={borderRadius:r.global,borderColor:x?z:B,borderWidth:1,paddingTop:this.state.labeled?1.5*q.large:q.large,paddingBottom:this.state.labeled?.5*q.large:q.large,opacity:c?s:1,backgroundColor:E},J=f&&"inset"===g?q.large+q.text:f&&"outset"===g?ICON_SIZE+q.small+q.medium:q.medium,F.paddingHorizontal=q.medium),f&&"outset"===g&&(D.marginLeft=ICON_SIZE+q.small);let K=e?o.error:this.state.focused?o.primary:o.light;const L={size:24,color:K,name:f},M={position:"absolute",marginTop:"solid"===b?w+q.text:"outset"===g?q.large:0},N=_objectSpread({},p.subtitle1,{top:"solid"===b?q.large:0,left:f&&"inset"===g?ICON_SIZE+("solid"===b?q.large:q.medium):0,transform:[{// Move label to top
translateY:this.state.labeled.interpolate({inputRange:[0,1],outputRange:["solid"===b?u:t,0]})},{// Make label smaller
scale:this.state.labeled.interpolate({inputRange:[0,1],outputRange:[w/v,1]})},{// Offset label scale since RN doesn't support transform origin
translateX:this.state.labeled.interpolate({inputRange:[0,1],outputRange:[-(1-w/v)*(this.state.labelLayout.width/2),0]})}]}),O=[styles.input,F,"solid"===b?{marginHorizontal:q.medium}:{}];return React.createElement(_reactNative.View,{style:[styles.container,k]},f&&"outset"===g?React.createElement(_Icon.default,_extends({},L,{style:M})):null,React.createElement(_reactNative.View,{style:D},"underline"===b?// When type === 'flat', render an underline
React.createElement(_reactNative.Animated.View,{style:[styles.underline,{backgroundColor:e?o.error:this.state.focused?z:A,// Underlines is thinner when input is not focused
transform:[{scaleY:this.state.focused?1:.5}]}]}):null,d?// Position colored placeholder and gray placeholder on top of each other and crossfade them
// This gives the effect of animating the color, but allows us to use native driver
React.createElement(_reactNative.View,{pointerEvents:"none",style:[_reactNative.StyleSheet.absoluteFill,{opacity:// Hide the label in minimized state until we measure its width
this.state.value||this.state.focused?this.state.labelLayout.measured?1:0:1}]},React.createElement(AnimatedText,{onLayout:a=>this.setState({labelLayout:{width:a.nativeEvent.layout.width,measured:!0}}),style:[styles.placeholder,"solid"===b?{paddingHorizontal:q.medium}:{},N,{color:o.light,opacity:this.state.labeled.interpolate({inputRange:[0,1],outputRange:[x?1:0,0]})}],numberOfLines:1},d),React.createElement(AnimatedText,{style:[styles.placeholder,"solid"===b?{paddingHorizontal:q.medium}:{},N,{color:C,opacity:x?this.state.labeled:1}],numberOfLines:1},d)):null,f&&"inset"===g?React.createElement(_Icon.default,_extends({},L,{style:_objectSpread({},M,{marginLeft:"solid"===b?q.large:0})})):null,m(_objectSpread({},n,{ref:a=>{this._root=a},onChange:this._handleChangeText,placeholder:d?this.state.placeholder:this.props.placeholder,placeholderTextColor:C,editable:!c,selectionColor:z,multiline:j,onFocus:this._handleFocus,onBlur:this._handleBlur,underlineColorAndroid:"transparent",style:O}))),h?React.createElement(_Icon.default,{name:h,size:ICON_SIZE,color:o.light,style:{position:"absolute",right:q.large,marginTop:"solid"===b?w+q.text:q.large}}):null,i?React.createElement(_reactNative.Text,{style:[styles.caption,{color:e?o.error:o.light,marginTop:q.small,marginLeft:J}]},i):null)}}TextField.defaultProps={type:"underline",disabled:!1,error:!1,multiline:!1,render:a=>React.createElement(_reactNative.TextInput,a)},(0,_reactLifecyclesCompat.polyfill)(TextField);var _default=(0,_theming.withTheme)(TextField);exports.default=_default;const styles=_reactNative.StyleSheet.create({container:{alignSelf:"stretch"},placeholder:{position:"absolute",left:0},underline:{position:"absolute",left:0,right:0,bottom:0,height:2},input:{flexGrow:1,justifyContent:"center",textAlignVertical:"center",margin:0,textAlign:_reactNative.I18nManager.isRTL?"right":"left"}}),SEED_DATA_PROPS={label:{label:"Label",description:"The label to be displayed on the text field",type:_componentTypes.FORM_TYPES.string,value:"First Name",editable:!0,required:!0},placeholder:{label:"Placeholder",description:"The placeholder text of the input",type:_componentTypes.FORM_TYPES.string,value:null,editable:!0,required:!1},assistiveText:{label:"Assistive text",description:"Helper text to display below the input",type:_componentTypes.FORM_TYPES.string,value:null,editable:!0,required:!1},disabled:{label:"Disabled",description:"Whether the input should be disabled. Will prevent input and show a greyed out state.",type:_componentTypes.FORM_TYPES.boolean,value:null,editable:!0},error:{label:"Error",description:"Whether the input should display the error state",type:_componentTypes.FORM_TYPES.boolean,value:null,editable:!0},leftIconName:{label:"Left icon name",description:"The icon to display on the left",type:_componentTypes.FORM_TYPES.icon,value:null,editable:!0},leftIconMode:{label:"Left icon mode",description:"The mode of the icon to display on the left. 'inset' or 'outset'.",type:_componentTypes.FORM_TYPES.flatArray,value:"inset",options:["inset","outset"],editable:!0,required:!0},rightIconName:{label:"Right icon name",description:"The icon to display on the right",type:_componentTypes.FORM_TYPES.icon,value:null,editable:!0},keyboardType:{label:"Keyboard type",description:"Determines which keyboard to open",type:_componentTypes.FORM_TYPES.flatArray,value:null,options:["default","number-pad","decimal-pad","numeric","email-address","phone-pad","ascii-capable","numbers-and-punctuation","url","name-phone-pad","twitter","web-search","visible-password"],editable:!0,required:!1},fieldName:_objectSpread({},_componentTypes.FIELD_NAME,{handlerPropName:"onChangeText",value:"textFieldValue"})},SEED_DATA=[{name:"Text Field - Solid",tag:"TextField",description:"A text input with a solid border",category:_componentTypes.COMPONENT_TYPES.field,preview_image_url:"{CLOUDINARY_URL}/Textfield.png",supports_list_render:!1,props:_objectSpread({},SEED_DATA_PROPS,{type:{type:_componentTypes.FORM_TYPES.string,value:"solid",editable:!1},secureTextEntry:{label:"Password field",description:"If true, this turns the field into a password field, hiding the text",type:_componentTypes.FORM_TYPES.boolean,value:null,editable:!0,required:!1}}),layout:{}},{name:"Text Field - Underline",tag:"TextField",description:"A text input with an underline",category:_componentTypes.COMPONENT_TYPES.field,preview_image_url:"{CLOUDINARY_URL}/Textfield.png",supports_list_render:!1,props:_objectSpread({},SEED_DATA_PROPS,{type:{type:_componentTypes.FORM_TYPES.string,value:"underline",editable:!1},secureTextEntry:{label:"Password field",description:"If true, this turns the field into a password field, hiding the text",type:_componentTypes.FORM_TYPES.boolean,value:null,editable:!0,required:!1}}),layout:{}},{name:"Text Area - Solid",tag:"TextField",description:"A text area with a solid border",category:_componentTypes.COMPONENT_TYPES.field,preview_image_url:"{CLOUDINARY_URL}/TextArea.png",supports_list_render:!1,props:_objectSpread({},SEED_DATA_PROPS,{type:{type:_componentTypes.FORM_TYPES.string,value:"solid",editable:!1},multiline:{type:_componentTypes.FORM_TYPES.boolean,value:!0,editable:!1}}),layout:{}},{name:"Text Area - Underline",tag:"TextField",description:"A text area with an underline",category:_componentTypes.COMPONENT_TYPES.field,preview_image_url:"{CLOUDINARY_URL}/TextArea.png",supports_list_render:!1,props:_objectSpread({},SEED_DATA_PROPS,{type:{type:_componentTypes.FORM_TYPES.string,value:"underline",editable:!1},multiline:{type:_componentTypes.FORM_TYPES.boolean,value:!0,editable:!1}}),layout:{}}];exports.SEED_DATA=SEED_DATA;